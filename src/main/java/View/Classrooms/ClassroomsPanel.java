/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Classrooms;

import Model.Classroom;
import Model.School;
import Model.Student;
import Model.Teacher;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author vedan
 */
public class ClassroomsPanel extends javax.swing.JPanel {

    private JPanel container;
    private School school;

    /**
     * Creates new form NewJPanel
     */
    public ClassroomsPanel(JPanel container, School school) {
        initComponents();
        this.container = container;
        this.school = school;
        
        // populateTree();
    }

    /*
    public void populateTree() {
        DefaultTreeModel model = (DefaultTreeModel) schoolTree.getModel();
        List<Classroom> classroomList = school.getClassroomList();
        List<Student> studentsList;
        List<Teacher> teachersList;

        Classroom classroom;
        Teacher teacher;
        Student student;

        DefaultMutableTreeNode classrooms = new DefaultMutableTreeNode("Classrooms");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        root.insert(classrooms, 0);

        DefaultMutableTreeNode classroomNode;
        DefaultMutableTreeNode teacherNode;
        DefaultMutableTreeNode studentNode;

        // Iterator itr = new Iterator(networkList);
        for (int i = 0; i < classroomList.size(); i++) {
            classroom = classroomList.get(i);
            classroomNode = new DefaultMutableTreeNode("ClassroomId - " + classroom.getId());
            classrooms.insert(classroomNode, i);

            teachersList = classroom.getTeacherList()
                    .stream()
                    .map(person -> (Teacher) person)
                    .collect(Collectors.toList());

            for (int j = 0; j < teachersList.size(); j++) {
                teacher = teachersList.get(j);
                teacherNode = new DefaultMutableTreeNode("Teacher: " + teacher.getFirstName());
                classroomNode.insert(teacherNode, j);

                studentsList = teacher.getStudentList()
                        .stream()
                        .map(person -> (Student) person)
                        .collect(Collectors.toList());

                for (int k = 0; k < studentsList.size(); k++) {
                    //System.out.println("i is "+i+ "  org size "+organizationList.size());
                    student = studentsList.get(k);
                    studentNode = new DefaultMutableTreeNode(student.getFirstName() + " " + student.getLastName());
                    teacherNode.insert(studentNode, k);
                }
            }
        }        
        model.reload();
    }
*/ 


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        schoolTree = new javax.swing.JTree();

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("School");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Classroom");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Teacher");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("red");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("yellow");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        schoolTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(schoolTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 589, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree schoolTree;
    // End of variables declaration//GEN-END:variables
}
